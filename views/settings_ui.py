# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'e:\ollama_gui\views\settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SettingsDialog(object):
    def setupUi(self, SettingsDialog):
        SettingsDialog.setObjectName("SettingsDialog")
        SettingsDialog.resize(800, 629)
        self.gridLayout_main = QtWidgets.QGridLayout(SettingsDialog)
        self.gridLayout_main.setObjectName("gridLayout_main")
        self.save_button = QtWidgets.QPushButton(SettingsDialog)
        self.save_button.setObjectName("save_button")
        self.gridLayout_main.addWidget(self.save_button, 3, 0, 1, 1)
        self.tabs = QtWidgets.QTabWidget(SettingsDialog)
        self.tabs.setObjectName("tabs")
        self.model_tab = QtWidgets.QWidget()
        self.model_tab.setObjectName("model_tab")
        self.gridLayout_model = QtWidgets.QGridLayout(self.model_tab)
        self.gridLayout_model.setObjectName("gridLayout_model")
        self.gridLayout_temperature = QtWidgets.QGridLayout()
        self.gridLayout_temperature.setObjectName("gridLayout_temperature")
        self.temperature_label = QtWidgets.QLabel(self.model_tab)
        self.temperature_label.setObjectName("temperature_label")
        self.gridLayout_temperature.addWidget(self.temperature_label, 0, 0, 1, 1)
        self.temperature = QtWidgets.QDoubleSpinBox(self.model_tab)
        self.temperature.setMinimum(0.0)
        self.temperature.setMaximum(2.0)
        self.temperature.setSingleStep(0.1)
        self.temperature.setProperty("value", 0.8)
        self.temperature.setObjectName("temperature")
        self.gridLayout_temperature.addWidget(self.temperature, 0, 1, 1, 1)
        self.temperature_explanation = QtWidgets.QLabel(self.model_tab)
        self.temperature_explanation.setWordWrap(True)
        self.temperature_explanation.setObjectName("temperature_explanation")
        self.gridLayout_temperature.addWidget(self.temperature_explanation, 2, 0, 1, 2)
        self.gridLayout_model.addLayout(self.gridLayout_temperature, 0, 0, 1, 1)
        self.gridLayout_num_ctx = QtWidgets.QGridLayout()
        self.gridLayout_num_ctx.setObjectName("gridLayout_num_ctx")
        self.num_ctx_label = QtWidgets.QLabel(self.model_tab)
        self.num_ctx_label.setObjectName("num_ctx_label")
        self.gridLayout_num_ctx.addWidget(self.num_ctx_label, 0, 0, 1, 1)
        self.num_ctx = QtWidgets.QSpinBox(self.model_tab)
        self.num_ctx.setMinimum(1)
        self.num_ctx.setMaximum(8192)
        self.num_ctx.setProperty("value", 2048)
        self.num_ctx.setObjectName("num_ctx")
        self.gridLayout_num_ctx.addWidget(self.num_ctx, 0, 1, 1, 1)
        self.num_ctx_explanation = QtWidgets.QLabel(self.model_tab)
        self.num_ctx_explanation.setWordWrap(True)
        self.num_ctx_explanation.setObjectName("num_ctx_explanation")
        self.gridLayout_num_ctx.addWidget(self.num_ctx_explanation, 2, 0, 1, 2)
        self.gridLayout_model.addLayout(self.gridLayout_num_ctx, 1, 0, 1, 1)
        self.gridLayout_max_tokens = QtWidgets.QGridLayout()
        self.gridLayout_max_tokens.setObjectName("gridLayout_max_tokens")
        self.max_tokens_label = QtWidgets.QLabel(self.model_tab)
        self.max_tokens_label.setObjectName("max_tokens_label")
        self.gridLayout_max_tokens.addWidget(self.max_tokens_label, 0, 0, 1, 1)
        self.max_tokens = QtWidgets.QSpinBox(self.model_tab)
        self.max_tokens.setMinimum(1)
        self.max_tokens.setMaximum(4096)
        self.max_tokens.setProperty("value", 256)
        self.max_tokens.setObjectName("max_tokens")
        self.gridLayout_max_tokens.addWidget(self.max_tokens, 0, 1, 1, 1)
        self.max_tokens_explanation = QtWidgets.QLabel(self.model_tab)
        self.max_tokens_explanation.setWordWrap(True)
        self.max_tokens_explanation.setObjectName("max_tokens_explanation")
        self.gridLayout_max_tokens.addWidget(self.max_tokens_explanation, 3, 0, 1, 2)
        self.gridLayout_model.addLayout(self.gridLayout_max_tokens, 2, 0, 1, 1)
        self.gridLayout_system_prompt = QtWidgets.QGridLayout()
        self.gridLayout_system_prompt.setObjectName("gridLayout_system_prompt")
        self.system_prompt_label = QtWidgets.QLabel(self.model_tab)
        self.system_prompt_label.setObjectName("system_prompt_label")
        self.gridLayout_system_prompt.addWidget(self.system_prompt_label, 0, 0, 1, 1)
        self.system_prompt = QtWidgets.QTextEdit(self.model_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.system_prompt.sizePolicy().hasHeightForWidth())
        self.system_prompt.setSizePolicy(sizePolicy)
        self.system_prompt.setObjectName("system_prompt")
        self.gridLayout_system_prompt.addWidget(self.system_prompt, 1, 0, 1, 1)
        self.system_prompt_explanation = QtWidgets.QLabel(self.model_tab)
        self.system_prompt_explanation.setWordWrap(True)
        self.system_prompt_explanation.setObjectName("system_prompt_explanation")
        self.gridLayout_system_prompt.addWidget(self.system_prompt_explanation, 2, 0, 1, 1)
        self.gridLayout_model.addLayout(self.gridLayout_system_prompt, 3, 0, 1, 1)
        self.tabs.addTab(self.model_tab, "")
        self.ui_tab = QtWidgets.QWidget()
        self.ui_tab.setObjectName("ui_tab")
        self.gridLayout_ui = QtWidgets.QGridLayout(self.ui_tab)
        self.gridLayout_ui.setObjectName("gridLayout_ui")
        self.gridLayout_theme = QtWidgets.QGridLayout()
        self.gridLayout_theme.setObjectName("gridLayout_theme")
        self.theme_label = QtWidgets.QLabel(self.ui_tab)
        self.theme_label.setObjectName("theme_label")
        self.gridLayout_theme.addWidget(self.theme_label, 0, 0, 1, 1)
        self.theme = QtWidgets.QComboBox(self.ui_tab)
        self.theme.setObjectName("theme")
        self.theme.addItem("")
        self.theme.addItem("")
        self.theme.addItem("")
        self.gridLayout_theme.addWidget(self.theme, 0, 1, 1, 1)
        self.theme_explanation = QtWidgets.QLabel(self.ui_tab)
        self.theme_explanation.setWordWrap(True)
        self.theme_explanation.setObjectName("theme_explanation")
        self.gridLayout_theme.addWidget(self.theme_explanation, 2, 0, 1, 2)
        self.gridLayout_ui.addLayout(self.gridLayout_theme, 1, 0, 1, 1)
        self.gridLayout_font_size = QtWidgets.QGridLayout()
        self.gridLayout_font_size.setObjectName("gridLayout_font_size")
        self.font_size_label = QtWidgets.QLabel(self.ui_tab)
        self.font_size_label.setObjectName("font_size_label")
        self.gridLayout_font_size.addWidget(self.font_size_label, 0, 0, 1, 1)
        self.font_size = QtWidgets.QSpinBox(self.ui_tab)
        self.font_size.setMinimum(8)
        self.font_size.setMaximum(24)
        self.font_size.setProperty("value", 12)
        self.font_size.setObjectName("font_size")
        self.gridLayout_font_size.addWidget(self.font_size, 0, 1, 1, 1)
        self.font_size_explanation = QtWidgets.QLabel(self.ui_tab)
        self.font_size_explanation.setWordWrap(True)
        self.font_size_explanation.setObjectName("font_size_explanation")
        self.gridLayout_font_size.addWidget(self.font_size_explanation, 2, 0, 1, 2)
        self.gridLayout_ui.addLayout(self.gridLayout_font_size, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_ui.addItem(spacerItem, 2, 0, 1, 1)
        self.tabs.addTab(self.ui_tab, "")
        self.advanced_tab = QtWidgets.QWidget()
        self.advanced_tab.setObjectName("advanced_tab")
        self.gridLayout_advanced = QtWidgets.QGridLayout(self.advanced_tab)
        self.gridLayout_advanced.setObjectName("gridLayout_advanced")
        self.gridLayout_presence_penalty = QtWidgets.QGridLayout()
        self.gridLayout_presence_penalty.setObjectName("gridLayout_presence_penalty")
        self.presence_penalty_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.presence_penalty_label.sizePolicy().hasHeightForWidth())
        self.presence_penalty_label.setSizePolicy(sizePolicy)
        self.presence_penalty_label.setObjectName("presence_penalty_label")
        self.gridLayout_presence_penalty.addWidget(self.presence_penalty_label, 0, 0, 1, 1)
        self.presence_penalty = QtWidgets.QDoubleSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.presence_penalty.sizePolicy().hasHeightForWidth())
        self.presence_penalty.setSizePolicy(sizePolicy)
        self.presence_penalty.setMinimum(-2.0)
        self.presence_penalty.setMaximum(2.0)
        self.presence_penalty.setSingleStep(0.1)
        self.presence_penalty.setProperty("value", 0.0)
        self.presence_penalty.setObjectName("presence_penalty")
        self.gridLayout_presence_penalty.addWidget(self.presence_penalty, 0, 1, 1, 1)
        self.presence_penalty_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.presence_penalty_explanation.setWordWrap(True)
        self.presence_penalty_explanation.setObjectName("presence_penalty_explanation")
        self.gridLayout_presence_penalty.addWidget(self.presence_penalty_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_presence_penalty, 5, 0, 1, 1)
        self.gridLayout_stop_sequences = QtWidgets.QGridLayout()
        self.gridLayout_stop_sequences.setObjectName("gridLayout_stop_sequences")
        self.stop_sequences = QtWidgets.QLineEdit(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stop_sequences.sizePolicy().hasHeightForWidth())
        self.stop_sequences.setSizePolicy(sizePolicy)
        self.stop_sequences.setObjectName("stop_sequences")
        self.gridLayout_stop_sequences.addWidget(self.stop_sequences, 0, 1, 1, 1)
        self.stop_sequences_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stop_sequences_label.sizePolicy().hasHeightForWidth())
        self.stop_sequences_label.setSizePolicy(sizePolicy)
        self.stop_sequences_label.setObjectName("stop_sequences_label")
        self.gridLayout_stop_sequences.addWidget(self.stop_sequences_label, 0, 0, 1, 1)
        self.stop_sequences_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.stop_sequences_explanation.setWordWrap(True)
        self.stop_sequences_explanation.setObjectName("stop_sequences_explanation")
        self.gridLayout_stop_sequences.addWidget(self.stop_sequences_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_stop_sequences, 4, 0, 1, 1)
        self.gridLayout_logits_all = QtWidgets.QGridLayout()
        self.gridLayout_logits_all.setObjectName("gridLayout_logits_all")
        self.logits_all_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logits_all_label.sizePolicy().hasHeightForWidth())
        self.logits_all_label.setSizePolicy(sizePolicy)
        self.logits_all_label.setObjectName("logits_all_label")
        self.gridLayout_logits_all.addWidget(self.logits_all_label, 0, 0, 1, 1)
        self.logits_all = QtWidgets.QCheckBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logits_all.sizePolicy().hasHeightForWidth())
        self.logits_all.setSizePolicy(sizePolicy)
        self.logits_all.setObjectName("logits_all")
        self.gridLayout_logits_all.addWidget(self.logits_all, 0, 1, 1, 1)
        self.logits_all_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.logits_all_explanation.setWordWrap(True)
        self.logits_all_explanation.setObjectName("logits_all_explanation")
        self.gridLayout_logits_all.addWidget(self.logits_all_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_logits_all, 11, 0, 1, 1)
        self.gridLayout_frequency_penalty = QtWidgets.QGridLayout()
        self.gridLayout_frequency_penalty.setObjectName("gridLayout_frequency_penalty")
        self.frequency_penalty_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frequency_penalty_label.sizePolicy().hasHeightForWidth())
        self.frequency_penalty_label.setSizePolicy(sizePolicy)
        self.frequency_penalty_label.setObjectName("frequency_penalty_label")
        self.gridLayout_frequency_penalty.addWidget(self.frequency_penalty_label, 0, 0, 1, 1)
        self.frequency_penalty = QtWidgets.QDoubleSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frequency_penalty.sizePolicy().hasHeightForWidth())
        self.frequency_penalty.setSizePolicy(sizePolicy)
        self.frequency_penalty.setMinimum(-2.0)
        self.frequency_penalty.setMaximum(2.0)
        self.frequency_penalty.setSingleStep(0.1)
        self.frequency_penalty.setProperty("value", 0.0)
        self.frequency_penalty.setObjectName("frequency_penalty")
        self.gridLayout_frequency_penalty.addWidget(self.frequency_penalty, 0, 1, 1, 1)
        self.frequency_penalty_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.frequency_penalty_explanation.setWordWrap(True)
        self.frequency_penalty_explanation.setObjectName("frequency_penalty_explanation")
        self.gridLayout_frequency_penalty.addWidget(self.frequency_penalty_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_frequency_penalty, 7, 0, 1, 1)
        self.gridLayout_f16_kv = QtWidgets.QGridLayout()
        self.gridLayout_f16_kv.setObjectName("gridLayout_f16_kv")
        self.f16_kv = QtWidgets.QCheckBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.f16_kv.sizePolicy().hasHeightForWidth())
        self.f16_kv.setSizePolicy(sizePolicy)
        self.f16_kv.setObjectName("f16_kv")
        self.gridLayout_f16_kv.addWidget(self.f16_kv, 0, 1, 1, 1)
        self.f16_kv_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.f16_kv_label.sizePolicy().hasHeightForWidth())
        self.f16_kv_label.setSizePolicy(sizePolicy)
        self.f16_kv_label.setObjectName("f16_kv_label")
        self.gridLayout_f16_kv.addWidget(self.f16_kv_label, 0, 0, 1, 1)
        self.f16_kv_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.f16_kv_explanation.setWordWrap(True)
        self.f16_kv_explanation.setObjectName("f16_kv_explanation")
        self.gridLayout_f16_kv.addWidget(self.f16_kv_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_f16_kv, 8, 0, 1, 1)
        self.gridLayout_vocab_only = QtWidgets.QGridLayout()
        self.gridLayout_vocab_only.setObjectName("gridLayout_vocab_only")
        self.vocab_only_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vocab_only_label.sizePolicy().hasHeightForWidth())
        self.vocab_only_label.setSizePolicy(sizePolicy)
        self.vocab_only_label.setObjectName("vocab_only_label")
        self.gridLayout_vocab_only.addWidget(self.vocab_only_label, 0, 0, 1, 1)
        self.vocab_only = QtWidgets.QCheckBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vocab_only.sizePolicy().hasHeightForWidth())
        self.vocab_only.setSizePolicy(sizePolicy)
        self.vocab_only.setObjectName("vocab_only")
        self.gridLayout_vocab_only.addWidget(self.vocab_only, 0, 1, 1, 1)
        self.vocab_only_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.vocab_only_explanation.setWordWrap(True)
        self.vocab_only_explanation.setObjectName("vocab_only_explanation")
        self.gridLayout_vocab_only.addWidget(self.vocab_only_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_vocab_only, 10, 0, 1, 1)
        self.gridLayout_top_p = QtWidgets.QGridLayout()
        self.gridLayout_top_p.setObjectName("gridLayout_top_p")
        self.top_p_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.top_p_label.sizePolicy().hasHeightForWidth())
        self.top_p_label.setSizePolicy(sizePolicy)
        self.top_p_label.setObjectName("top_p_label")
        self.gridLayout_top_p.addWidget(self.top_p_label, 0, 0, 1, 1)
        self.top_p = QtWidgets.QDoubleSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.top_p.sizePolicy().hasHeightForWidth())
        self.top_p.setSizePolicy(sizePolicy)
        self.top_p.setMinimum(0.0)
        self.top_p.setMaximum(1.0)
        self.top_p.setSingleStep(0.05)
        self.top_p.setProperty("value", 0.9)
        self.top_p.setObjectName("top_p")
        self.gridLayout_top_p.addWidget(self.top_p, 0, 1, 1, 1)
        self.top_p_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.top_p_explanation.setWordWrap(True)
        self.top_p_explanation.setObjectName("top_p_explanation")
        self.gridLayout_top_p.addWidget(self.top_p_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_top_p, 0, 0, 1, 1)
        self.gridLayout_repeat_penalty = QtWidgets.QGridLayout()
        self.gridLayout_repeat_penalty.setObjectName("gridLayout_repeat_penalty")
        self.repeat_penalty_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeat_penalty_label.sizePolicy().hasHeightForWidth())
        self.repeat_penalty_label.setSizePolicy(sizePolicy)
        self.repeat_penalty_label.setObjectName("repeat_penalty_label")
        self.gridLayout_repeat_penalty.addWidget(self.repeat_penalty_label, 0, 0, 1, 1)
        self.repeat_penalty = QtWidgets.QDoubleSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeat_penalty.sizePolicy().hasHeightForWidth())
        self.repeat_penalty.setSizePolicy(sizePolicy)
        self.repeat_penalty.setMinimum(0.0)
        self.repeat_penalty.setMaximum(2.0)
        self.repeat_penalty.setSingleStep(0.1)
        self.repeat_penalty.setProperty("value", 1.1)
        self.repeat_penalty.setObjectName("repeat_penalty")
        self.gridLayout_repeat_penalty.addWidget(self.repeat_penalty, 0, 1, 1, 1)
        self.repeat_penalty_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.repeat_penalty_explanation.setWordWrap(True)
        self.repeat_penalty_explanation.setObjectName("repeat_penalty_explanation")
        self.gridLayout_repeat_penalty.addWidget(self.repeat_penalty_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_repeat_penalty, 2, 0, 1, 1)
        self.gridLayout_top_k = QtWidgets.QGridLayout()
        self.gridLayout_top_k.setObjectName("gridLayout_top_k")
        self.top_k_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.top_k_label.sizePolicy().hasHeightForWidth())
        self.top_k_label.setSizePolicy(sizePolicy)
        self.top_k_label.setObjectName("top_k_label")
        self.gridLayout_top_k.addWidget(self.top_k_label, 0, 0, 1, 1)
        self.top_k = QtWidgets.QSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.top_k.sizePolicy().hasHeightForWidth())
        self.top_k.setSizePolicy(sizePolicy)
        self.top_k.setMinimum(1)
        self.top_k.setMaximum(100)
        self.top_k.setProperty("value", 40)
        self.top_k.setObjectName("top_k")
        self.gridLayout_top_k.addWidget(self.top_k, 0, 1, 1, 1)
        self.top_k_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.top_k_explanation.setWordWrap(True)
        self.top_k_explanation.setObjectName("top_k_explanation")
        self.gridLayout_top_k.addWidget(self.top_k_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_top_k, 1, 0, 1, 1)
        self.gridLayout_repeat_last_n = QtWidgets.QGridLayout()
        self.gridLayout_repeat_last_n.setObjectName("gridLayout_repeat_last_n")
        self.repeat_last_n_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeat_last_n_label.sizePolicy().hasHeightForWidth())
        self.repeat_last_n_label.setSizePolicy(sizePolicy)
        self.repeat_last_n_label.setObjectName("repeat_last_n_label")
        self.gridLayout_repeat_last_n.addWidget(self.repeat_last_n_label, 0, 0, 1, 1)
        self.repeat_last_n = QtWidgets.QSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repeat_last_n.sizePolicy().hasHeightForWidth())
        self.repeat_last_n.setSizePolicy(sizePolicy)
        self.repeat_last_n.setMinimum(0)
        self.repeat_last_n.setMaximum(2048)
        self.repeat_last_n.setProperty("value", 64)
        self.repeat_last_n.setObjectName("repeat_last_n")
        self.gridLayout_repeat_last_n.addWidget(self.repeat_last_n, 0, 1, 1, 1)
        self.repeat_last_n_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.repeat_last_n_explanation.setWordWrap(True)
        self.repeat_last_n_explanation.setObjectName("repeat_last_n_explanation")
        self.gridLayout_repeat_last_n.addWidget(self.repeat_last_n_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_repeat_last_n, 6, 0, 1, 1)
        self.gridLayout_seed = QtWidgets.QGridLayout()
        self.gridLayout_seed.setObjectName("gridLayout_seed")
        self.seed = QtWidgets.QSpinBox(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.seed.sizePolicy().hasHeightForWidth())
        self.seed.setSizePolicy(sizePolicy)
        self.seed.setMinimum(-1)
        self.seed.setMaximum(2147483647)
        self.seed.setProperty("value", -1)
        self.seed.setObjectName("seed")
        self.gridLayout_seed.addWidget(self.seed, 0, 1, 1, 1)
        self.seed_label = QtWidgets.QLabel(self.advanced_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.seed_label.sizePolicy().hasHeightForWidth())
        self.seed_label.setSizePolicy(sizePolicy)
        self.seed_label.setObjectName("seed_label")
        self.gridLayout_seed.addWidget(self.seed_label, 0, 0, 1, 1)
        self.seed_explanation = QtWidgets.QLabel(self.advanced_tab)
        self.seed_explanation.setWordWrap(True)
        self.seed_explanation.setObjectName("seed_explanation")
        self.gridLayout_seed.addWidget(self.seed_explanation, 1, 0, 1, 2)
        self.gridLayout_advanced.addLayout(self.gridLayout_seed, 3, 0, 1, 1)
        self.tabs.addTab(self.advanced_tab, "")
        self.memory_tab = QtWidgets.QWidget()
        self.memory_tab.setObjectName("memory_tab")
        self.gridLayout_memory = QtWidgets.QGridLayout(self.memory_tab)
        self.gridLayout_memory.setObjectName("gridLayout_memory")
        self.gridLayout_memory_type = QtWidgets.QGridLayout()
        self.gridLayout_memory_type.setObjectName("gridLayout_memory_type")
        self.memory_type_label = QtWidgets.QLabel(self.memory_tab)
        self.memory_type_label.setObjectName("memory_type_label")
        self.gridLayout_memory_type.addWidget(self.memory_type_label, 0, 0, 1, 1)
        self.memory_type = QtWidgets.QComboBox(self.memory_tab)
        self.memory_type.setObjectName("memory_type")
        self.memory_type.addItem("")
        self.memory_type.addItem("")
        self.memory_type.addItem("")
        self.gridLayout_memory_type.addWidget(self.memory_type, 0, 1, 1, 1)
        self.memory_type_explanation = QtWidgets.QLabel(self.memory_tab)
        self.memory_type_explanation.setWordWrap(True)
        self.memory_type_explanation.setObjectName("memory_type_explanation")
        self.gridLayout_memory_type.addWidget(self.memory_type_explanation, 2, 0, 1, 2)
        self.gridLayout_memory.addLayout(self.gridLayout_memory_type, 0, 0, 1, 1)
        self.gridLayout_memory_k = QtWidgets.QGridLayout()
        self.gridLayout_memory_k.setObjectName("gridLayout_memory_k")
        self.memory_k_label = QtWidgets.QLabel(self.memory_tab)
        self.memory_k_label.setObjectName("memory_k_label")
        self.gridLayout_memory_k.addWidget(self.memory_k_label, 0, 0, 1, 1)
        self.memory_k = QtWidgets.QSpinBox(self.memory_tab)
        self.memory_k.setMinimum(1)
        self.memory_k.setMaximum(100)
        self.memory_k.setProperty("value", 5)
        self.memory_k.setObjectName("memory_k")
        self.gridLayout_memory_k.addWidget(self.memory_k, 0, 1, 1, 1)
        self.memory_k_explanation = QtWidgets.QLabel(self.memory_tab)
        self.memory_k_explanation.setWordWrap(True)
        self.memory_k_explanation.setObjectName("memory_k_explanation")
        self.gridLayout_memory_k.addWidget(self.memory_k_explanation, 2, 0, 1, 2)
        self.gridLayout_memory.addLayout(self.gridLayout_memory_k, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_memory.addItem(spacerItem1, 2, 0, 1, 1)
        self.tabs.addTab(self.memory_tab, "")
        self.gridLayout_main.addWidget(self.tabs, 1, 0, 1, 1)

        self.retranslateUi(SettingsDialog)
        self.tabs.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(SettingsDialog)

    def retranslateUi(self, SettingsDialog):
        _translate = QtCore.QCoreApplication.translate
        SettingsDialog.setWindowTitle(_translate("SettingsDialog", "Settings"))
        self.save_button.setText(_translate("SettingsDialog", "Save"))
        self.temperature_label.setText(_translate("SettingsDialog", "Temperature:"))
        self.temperature_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.temperature_explanation.setText(_translate("SettingsDialog", "Controls randomness in output. Higher values (e.g., 0.8) make output more random, lower values (e.g., 0.2) make it more focused and deterministic."))
        self.num_ctx_label.setText(_translate("SettingsDialog", "Context Length:"))
        self.num_ctx_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.num_ctx_explanation.setText(_translate("SettingsDialog", "The maximum number of tokens the model considers. Larger values allow for more context but may slow down the model."))
        self.max_tokens_label.setText(_translate("SettingsDialog", "Max Tokens:"))
        self.max_tokens_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.max_tokens_explanation.setText(_translate("SettingsDialog", "The maximum number of tokens to generate in the response. Higher values allow for longer responses but may increase processing time."))
        self.system_prompt_label.setText(_translate("SettingsDialog", "System Prompt:"))
        self.system_prompt.setPlaceholderText(_translate("SettingsDialog", "Enter system prompt here..."))
        self.system_prompt_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.system_prompt_explanation.setText(_translate("SettingsDialog", "Initial prompt to set the context or behavior for the AI. Use this to guide the AI\'s responses or set a specific role."))
        self.tabs.setTabText(self.tabs.indexOf(self.model_tab), _translate("SettingsDialog", "Model Settings"))
        self.theme_label.setText(_translate("SettingsDialog", "Theme:"))
        self.theme.setItemText(0, _translate("SettingsDialog", "Light"))
        self.theme.setItemText(1, _translate("SettingsDialog", "Dark"))
        self.theme.setItemText(2, _translate("SettingsDialog", "System"))
        self.theme_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.theme_explanation.setText(_translate("SettingsDialog", "Choose the color scheme of the application. Light for bright backgrounds, Dark for darker backgrounds, System to match your OS settings."))
        self.font_size_label.setText(_translate("SettingsDialog", "Font Size:"))
        self.font_size_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.font_size_explanation.setText(_translate("SettingsDialog", "Adjust the size of text in the application. Larger values make text bigger, smaller values make it smaller."))
        self.tabs.setTabText(self.tabs.indexOf(self.ui_tab), _translate("SettingsDialog", "UI Settings"))
        self.presence_penalty_label.setText(_translate("SettingsDialog", "Presence Penalty:"))
        self.presence_penalty_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.presence_penalty_explanation.setText(_translate("SettingsDialog", "Penalizes new tokens based on whether they appear in the text so far. Increases the model\'s likelihood to talk about new topics."))
        self.stop_sequences.setPlaceholderText(_translate("SettingsDialog", "Enter stop sequences separated by commas"))
        self.stop_sequences_label.setText(_translate("SettingsDialog", "Stop Sequences:"))
        self.stop_sequences_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.stop_sequences_explanation.setText(_translate("SettingsDialog", "Sequences that, when generated, will cause the model to stop. Useful for controlling output format."))
        self.logits_all_label.setText(_translate("SettingsDialog", "Logits All:"))
        self.logits_all_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.logits_all_explanation.setText(_translate("SettingsDialog", "Return logits for all tokens. Useful for advanced applications but may slow down inference."))
        self.frequency_penalty_label.setText(_translate("SettingsDialog", "Frequency Penalty:"))
        self.frequency_penalty_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.frequency_penalty_explanation.setText(_translate("SettingsDialog", "Penalizes new tokens based on their existing frequency in the text. Decreases the model\'s likelihood to repeat the same line verbatim."))
        self.f16_kv_label.setText(_translate("SettingsDialog", "Use F16 KV:"))
        self.f16_kv_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.f16_kv_explanation.setText(_translate("SettingsDialog", "Use half-precision (16-bit) for key/value cache. Can speed up inference but might slightly reduce quality."))
        self.vocab_only_label.setText(_translate("SettingsDialog", "Vocab Only:"))
        self.vocab_only_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.vocab_only_explanation.setText(_translate("SettingsDialog", "Only return the vocabulary without generating text. Useful for inspecting the model\'s vocabulary."))
        self.top_p_label.setText(_translate("SettingsDialog", "Top P:"))
        self.top_p_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.top_p_explanation.setText(_translate("SettingsDialog", "Nucleus sampling: selects from the smallest set of tokens whose cumulative probability exceeds P. Balances diversity and quality."))
        self.repeat_penalty_label.setText(_translate("SettingsDialog", "Repeat Penalty:"))
        self.repeat_penalty_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.repeat_penalty_explanation.setText(_translate("SettingsDialog", "Penalizes repetition in generated text. Higher values (>1.0) reduce repetition, lower values allow more repetition."))
        self.top_k_label.setText(_translate("SettingsDialog", "Top K:"))
        self.top_k_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.top_k_explanation.setText(_translate("SettingsDialog", "Limits the next token selection to the K most likely tokens. Lower values increase focus, higher values increase diversity."))
        self.repeat_last_n_label.setText(_translate("SettingsDialog", "Repeat Last N:"))
        self.repeat_last_n_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.repeat_last_n_explanation.setText(_translate("SettingsDialog", "Number of tokens to consider for repeat penalty. Larger values consider more context to avoid repetition."))
        self.seed_label.setText(_translate("SettingsDialog", "Seed:"))
        self.seed_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.seed_explanation.setText(_translate("SettingsDialog", "Random seed for reproducibility. Set to -1 for random results, or use a specific number for consistent outputs."))
        self.tabs.setTabText(self.tabs.indexOf(self.advanced_tab), _translate("SettingsDialog", "Advanced Settings"))
        self.memory_type_label.setText(_translate("SettingsDialog", "Memory Type:"))
        self.memory_type.setItemText(0, _translate("SettingsDialog", "ConversationBufferMemory"))
        self.memory_type.setItemText(1, _translate("SettingsDialog", "ConversationBufferWindowMemory"))
        self.memory_type.setItemText(2, _translate("SettingsDialog", "ConversationSummaryMemory"))
        self.memory_type_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.memory_type_explanation.setText(_translate("SettingsDialog", "Choose how the AI remembers previous conversations. Buffer keeps all messages, Window keeps last K messages, Summary keeps a summary."))
        self.memory_k_label.setText(_translate("SettingsDialog", "Memory K:"))
        self.memory_k_explanation.setStyleSheet(_translate("SettingsDialog", "font-size: 10px; color: gray;"))
        self.memory_k_explanation.setText(_translate("SettingsDialog", "Number of recent conversations to remember when using ConversationBufferWindowMemory. Higher values allow for more context but use more memory."))
        self.tabs.setTabText(self.tabs.indexOf(self.memory_tab), _translate("SettingsDialog", "Memory Settings"))
